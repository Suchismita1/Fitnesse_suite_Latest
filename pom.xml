<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.fitnesse.test</groupId>
  <artifactId>Fitness_Automation</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Fitness_Automation</name>
 <packaging>jar</packaging>
  
 <properties>
        <javaVersion>1.8</javaVersion>
        <main.basedir>${project.basedir}</main.basedir>
        <logFileName>FitnesseReport.txt</logFileName>
        <log.filename>-DlogFileName=${logFileName}</log.filename>

        <!-- Default environment configuration properties to be set as JVM properties in their respective profiles below -->
        <!-- If any of these properties are passed from command line will overwrite the default values below -->
        <urlPrefix>http://</urlPrefix>

        <appHost>localhost</appHost>
        <appPort>8080</appPort>
        <appUsername></appUsername>
        <appPassword></appPassword>

        <pricerHost>localhost</pricerHost>
        <pricerPort>8080</pricerPort>
        <pricerUsername></pricerUsername>
        <pricerPassword></pricerPassword>
        <contentType>application/json</contentType>
        <correlationId>123456789</correlationId>

        <intApiUsername></intApiUsername>
        <intApiPassword></intApiPassword>

        <ReMTargetEnv>null</ReMTargetEnv>
        <SshUser>null</SshUser>
        <SshPassword>null</SshPassword>

        <hubEndpoint></hubEndpoint>
        <environment>remui</environment>
        <module></module>
        <email></email>
        <tenantAlias></tenantAlias>

        <fsuploaddir>src/test/resources/imports/feeschedules/</fsuploaddir>
        <codeuploaddir>src/test/resources/imports/codes/</codeuploaddir>
        <productuploaddir>src/test/resources/imports/products/</productuploaddir>

        <browser>Internet Explorer</browser>
        <browserVersion>9</browserVersion>
        <platform>Windows 7</platform>
        <sauceUser>null</sauceUser>
        <sauceKey>null</sauceKey>
        <captureSeleniumLog>false</captureSeleniumLog>
        <captureSauceJobResults>false</captureSauceJobResults>

        <dbdrivertype>thin</dbdrivertype>
        <dbservername>localhost</dbservername>
        <dbport>1521</dbport>
        <dbsid></dbsid>
        <dbservicename>xe</dbservicename>
        <dbuser>remdev</dbuser>
        <dbpassword>remdev</dbpassword>

        <!-- Convert above properties into JVM properties for FitNesse.
          -  The properties are set in the 'fitnesse' and 'fitnesse-integration' profiles below 
        -->
        <param.fsuploaddir>-DfsUploadDir=${fsuploaddir}</param.fsuploaddir>
        <param.codeuploaddir>-DcodeUploadDir=${codeuploaddir}</param.codeuploaddir>
        <param.productuploaddir>-DproductUploadDir=${productuploaddir}</param.productuploaddir>
        <param.url.prefix>-DurlPrefix=${urlPrefix}</param.url.prefix>
        <param.app.host>-DappHost=${appHost}</param.app.host>
        <param.app.port>-DappPort=${appPort}</param.app.port>
        <param.app.username>-DappUsername=${appUsername}</param.app.username>
        <param.app.password>-DappPassword=${appPassword}</param.app.password>
        <param.pricer.host>-DpricerHost=${pricerHost}</param.pricer.host>
        <param.pricer.port>-DpricerPort=${pricerPort}</param.pricer.port>
        <param.pricer.username>-DpricerUsername=${pricerUsername}</param.pricer.username>
        <param.pricer.password>-DpricerPassword=${pricerPassword}</param.pricer.password>
        <param.int.api.username>-DintApiUsername=${intApiUsername}</param.int.api.username>
        <param.int.api.password>-DintApiPassword=${intApiPassword}</param.int.api.password>
        <param.content.type>-DcontentType=${contentType}</param.content.type>
        <param.correlationId>-DcorrelationId=${correlationId}</param.correlationId>
        <param.module>-Dmodule=${module}</param.module>
        <param.hub.endpoint>-DhubEndpoint=${hubEndpoint}</param.hub.endpoint>
		<param.environment>-Denvironment=${environment}</param.environment>
        <param.email>-Demail=${email}</param.email>
        <param.tenant.alias>-DtenantAlias=${tenantAlias}</param.tenant.alias>
        <param.rem.target.env>-DReMTargetEnv=${ReMTargetEnv}</param.rem.target.env>
        <param.rem.ssh.user>-DSshUser=${SshUser}</param.rem.ssh.user>
        <param.rem.ssh.password>-DSshPassword=${SshPassword}</param.rem.ssh.password>

        <param.browser>-Dbrowser=${browser}</param.browser>
        <param.browser.version>-DbrowserVersion=${browserVersion}</param.browser.version>
        <param.platform>-Dplatform=${platform}</param.platform>
        <param.sauce.user>-DsauceUser=${sauceUser}</param.sauce.user>
        <param.sauce.key>-DsauceKey=${sauceKey}</param.sauce.key>
        <param.sauce.results>-DcaptureSauceJobResults=${captureSauceJobResults}</param.sauce.results>
        <param.selenium.log>-DcaptureSeleniumLog=${captureSeleniumLog}</param.selenium.log>

        <param.db.driver.type>-DdbType=${dbdrivertype}</param.db.driver.type>
        <param.db.server.name>-DdbServerName=${dbservername}</param.db.server.name>
        <param.db.port>-DdbPort=${dbport}</param.db.port>
        <param.db.sid>-DdbSID=${dbsid}</param.db.sid>
        <param.db.service.name>-DdbServiceName=${dbservicename}</param.db.service.name>
        <param.db.user>-DdbUser=${dbuser}</param.db.user>
        <param.db.password>-DdbPassword=${dbpassword}</param.db.password>

        <!-- Project -->
        <selenium.version>3.0.1</selenium.version>
        <phantomjsdriver.version>1.0.3</phantomjsdriver.version>
        <operadriver.version>1.1</operadriver.version>
        <commons-lang.version>2.6</commons-lang.version>
        <slf4j.version>1.6.4</slf4j.version>
        <maven-classpath-plugin.version>1.7</maven-classpath-plugin.version>

        <!-- FitNesse -->
        <fitnesse.version>20151230</fitnesse.version>
        <fitnesse.expiration>0</fitnesse.expiration>
        <skipTests>true</skipTests>
        <fitnesse.port>8001</fitnesse.port>
        <fitnesse.host>localhost</fitnesse.host>
        <!-- <fitnesse.filter>ReM?suite&amp;format=html</fitnesse.filter> -->
        <!--<fitnesse.filter>ReM?suite&amp;format=html&amp;suiteFilter=395</fitnesse.filter>
        <fitnesse.filter>ReM.UserInterface?suite&amp;format=html</fitnesse.filter>-->
        <fitnesse.expiration>0</fitnesse.expiration>

        <!-- Database-->
        <ojdbc7.version>12.1.0.2.0</ojdbc7.version>
        <sqljdbc.version>1.2</sqljdbc.version>

    </properties>

    <repositories>
        <repository>
            <id>saucelabs-repository</id>
            <url>http://repository-saucelabs.forge.cloudbees.com/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>java-net</id>
            <url>http://download.java.net/maven/2</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>saucelabs-repository</id>
            <url>http://repository-saucelabs.forge.cloudbees.com/release</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- runtime dependencies -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <version>4.3.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.5.2</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.4.1</version>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>org.fitnesse</groupId>
            <artifactId>fitnesse</artifactId>
            <version>${fitnesse.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
            <scope>test</scope>
        </dependency>
        <dependency>
    		<groupId>com.googlecode.json-simple</groupId>
    		<artifactId>json-simple</artifactId>
    		<version>1.1.1</version>
		</dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.4.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-remote-driver</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
         <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-server</artifactId>
        <version>${selenium.version}</version>
    </dependency>  
    <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>4.5.2</version>
</dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore -->
<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpcore</artifactId>
    <version>4.4.5</version>
</dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime -->
<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpmime</artifactId>
    <version>4.5.2</version>
</dependency>
    
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.saucelabs</groupId>
            <artifactId>sauce-rest-api</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.saucelabs</groupId>
            <artifactId>sauce_testng</artifactId>
            <version>2.0.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.fluentlenium</groupId>
            <artifactId>fluentlenium-core</artifactId>
            <version>0.10.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium.fluent</groupId>
            <artifactId>fluent-selenium</artifactId>
            <version>1.14.5</version>
        </dependency>
        <dependency>
            <groupId>org.fluentlenium</groupId>
            <artifactId>fluentlenium-festassert</artifactId>
            <version>0.10.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.detro.ghostdriver</groupId>
            <artifactId>phantomjsdriver</artifactId>
            <version>${phantomjsdriver.version}</version>
        </dependency>
       <!--  <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc7</artifactId>
            <version>${ojdbc7.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>com.microsoft.jdbcdriver</groupId>
            <artifactId>sqljdbc</artifactId>
            <version>${sqljdbc.version}</version>
        </dependency> -->
    </dependencies>

    <build>
        <plugins>
            <!-- This plugin is required to run tests on saucelabs if running locally. Not required for TeamCity builds as TC has its own configuration -->
            <!--<plugin>
                <groupId>com.saucelabs.maven.plugin</groupId>
                <artifactId>sauce-connect-plugin</artifactId>
                <version>2.1.18</version>
                <configuration>
                    <sauceUsername>${sauceUser}</sauceUsername>
                    <sauceAccessKey>${sauceKey}</sauceAccessKey>
                </configuration>
                <executions>
                    <execution>
                        <id>start-sauceconnct</id>
                        <phase>test</phase>
                        <goals>
                            <goal>start-sauceconnect</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-sauceconnect</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop-sauceconnect</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>${javaVersion}</source>
                    <target>${javaVersion}</target>
                </configuration>
            </plugin>
            <plugin>
 <groupId>org.apache.maven.plugins</groupId>
 <artifactId>maven-antrun-plugin</artifactId>
 <version>1.7</version>
 <executions>
    <execution>
        <phase>pre-integration-test</phase> <!-- your Selenium tests should run in integration phase -->
        <configuration>
            <target>
                <java classname="org.openqa.grid.selenium.GridLauncher"
                      classpathref="maven.test.classpath"
                      failonerror="true"
                      fork="false">
                    <arg line="-role hub"/>
                </java>
                <java classname="org.openqa.grid.selenium.GridLauncher"
                      classpathref="maven.test.classpath"
                      failonerror="true"
                      fork="false">
                    <arg line="-role node
                               -browser 'browserName=firefox,version=19.0,maxInstances=3'
                               -browser 'browserName=internet explorer 64bits,version=9.0,maxInstances=2'
                               -hub http://localhost:4444/grid/register 
                               -port 5555 
                               -timeout 40000"/>
                </java>
                <java classname="org.openqa.grid.selenium.GridLauncher"
                      classpathref="maven.test.classpath"
                      failonerror="true"
                      fork="false">
                    <arg line="-role node
                               -browser 'browserName=chrome,version=24.0.1312.56,maxInstances=3'
                               -browser 'browserName=internet explorer 64bits,version=9.0,maxInstances=2'
                               -hub http://localhost:4444/grid/register 
                               -port 5556 
                               -timeout 40000"/>
                </java>
            </target>
        </configuration>
        <goals>
            <goal>run</goal>
        </goals>
    </execution>
</executions>
</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <reportPlugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jxr-plugin</artifactId>
                            <version>2.3</version>
                            <configuration>
                                <linkJavadoc>true</linkJavadoc>
                                <outputDirectory>target/surefire-reports/html/</outputDirectory>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>2.9</version>
                            <configuration>
                                <quiet>true</quiet>
                                <use>false</use>
                                <show>package</show>
                                <stylesheetfile>src/site/javadoc/stylesheet.css</stylesheetfile>
                                <includeDependencySources>false</includeDependencySources>
                                <name>Example Java Project JavaDocs</name>
                                <description>JavaDoc API documentation for FitNesse</description>
                                <links>
                                    <link>http://java.sun.com/javase/6/docs/api/</link>
                                </links>
                            </configuration>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>test-output</directory>
                            <followSymlinks>true</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <!-- This plugin installs the phantomjs binary on the system automatically and makes the property "phantomjs.binary" available after install -->
            <!-- The plugin is not working at the moment so the executable is manually added to the project resources which works for Windows environment only -->
            <!-- Need to figure out the plugin issues and resolve them to work in Linux environments -->
            <!--<plugin>
                <groupId>com.github.klieber</groupId>
                <artifactId>phantomjs-maven-plugin</artifactId>
                <version>0.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <version>1.9.7</version>
                </configuration>
            </plugin>-->
        </plugins>
    </build>

    <!-- This profile will launch FitNesse in Interactive mode -->
    <profiles>
        <profile>
            <id>fitnesse</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>start-fitnesse</id>
                                <phase>test</phase>
                                <configuration>
                                    <tasks>
                                        <!--<echo taskname="Update Default Service Categories" message="Activating Default Service Categories..." />
                                        <java classname="com.mhs.rem.fitnesse.ui.fixtures.data.ActivateDefaultServiceCategories" fork="true" failonerror="true">
                                            <classpath>
                                                <pathelement location="${project.basedir}/target/test-classes/ojdbc/ojdbc5-11.1.0.7.0.jar"/>
                                                <pathelement path="${project.basedir}/target/test-classes/"/>
                                            </classpath>
                                            <jvmarg value="${param.db.driver.type}" />
                                            <jvmarg value="${param.db.server.name}" />
                                            <jvmarg value="${param.db.port}" />
                                            <jvmarg value="${param.db.sid}" />
                                            <jvmarg value="${param.db.service.name}" />
                                            <jvmarg value="${param.db.user}" />
                                            <jvmarg value="${param.db.password}" />
                                        </java>-->
                                        <echo taskname="FitNesse" message="Starting FitNesse ${fitnesse.version}..." />
                                        <java classname="fitnesseMain.FitNesseMain" classpathref="maven.runtime.classpath" fork="true">
                                            <arg line="-p ${fitnesse.port}" />
                                            <jvmarg value="${param.url.prefix}" />
                                            <jvmarg value="${param.app.host}" />
                                            <jvmarg value="${param.hub.endpoint}" />
                                            <jvmarg value="${param.environment}" />
                                            <jvmarg value="${param.module}" />
                                            <jvmarg value="${param.fsuploaddir}" />
                                            <jvmarg value="${param.codeuploaddir}" />
                                            <jvmarg value="${param.productuploaddir}" />
                                            <jvmarg value="${param.browser}" />
                                            <jvmarg value="${param.email}" />
                                            <jvmarg value="${param.browser.version}" />
                                            <jvmarg value="${param.platform}" />
                                            <jvmarg value="${param.sauce.user}" />
                                            <jvmarg value="${param.sauce.key}" />
                                            <jvmarg value="${param.sauce.results}" />
                                            <jvmarg value="${param.db.driver.type}" />
                                            <jvmarg value="${param.db.server.name}" />
                                            <jvmarg value="${param.db.port}" />
                                            <jvmarg value="${param.db.sid}" />
                                            <jvmarg value="${param.db.service.name}" />
                                            <jvmarg value="${param.db.user}" />
                                            <jvmarg value="${param.db.password}" />
                                            <jvmarg value="${param.pricer.host}"/>
                                            <jvmarg value="${param.app.port}"/>
                                            <jvmarg value="${param.pricer.port}"/>
                                            <jvmarg value="${param.content.type}"/>
                                            <jvmarg value="${param.correlationId}"/>
                                            <jvmarg value="${param.app.username}"/>
                                            <jvmarg value="${param.app.password}"/>
											<jvmarg value="${param.tenant.alias}"/>
                                            <jvmarg value="${param.pricer.username}"/>
                                            <jvmarg value="${param.pricer.password}"/>
                                            <jvmarg value="${param.int.api.username}"/>
                                            <jvmarg value="${param.int.api.password}"/>
                                            <jvmarg value="${param.rem.target.env}"/>
                                            <jvmarg value="${param.rem.ssh.user}"/>
                                            <jvmarg value="${param.rem.ssh.password}"/>
                                            <jvmarg value="${param.selenium.log}"/>
                                            <!-- additional command line arg options -->
                                            <!--<arg line="-d " />-->  <!-- to define working directory. default is {.} -->
                                            <!--<arg line="-r " />-->  <!-- page root firectory. default is {FitNesseRoot} -->
                                            <!--<arg line="-l " />-->  <!-- log directory -->
                                            <!--<arg line="-e " />-->  <!-- number of days before page version exprires -->
                                            <!--<arg line="-o " />-->  <!-- omit updates -->
                                            <!--<arg line="-a " />-->  <!-- {user:pwd | user-file-name} enable authentication -->
                                        </java>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.fitnesse.plugins</groupId>
                    <artifactId>maven-classpath-plugin</artifactId>
                    <version>${maven-classpath-plugin.version}</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- This profile will shutdown FitNesse server using a build-in class fitnesse.Shutdown -->
        <profile>
            <id>shutdown</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>stop-fitnesse</id>
                                <phase>validate</phase>
                                <configuration>
                                    <tasks>
                                        <echo taskname="fitnesse" message="Shutting Down FitNesse on Port ${fitnesse.port}..." />
                                        <java classname="fitnesse.Shutdown" classpathref="maven.runtime.classpath">
                                            <arg line="-p ${fitnesse.port}" />
                                            <arg line="-h ${fitnesse.host}" />
                                            <!--<arg line="-c username password" />  Supply user credentials.  Use when FitNesse has authentication activated. -->
                                        </java>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.fitnesse.plugins</groupId>
                    <artifactId>maven-classpath-plugin</artifactId>
                    <version>${maven-classpath-plugin.version}</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- This profile will shutdown FitNesse using a URL request ot server -->
        <profile>
            <id>stop-fitnesse</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>Shutdown FitNesse through Browser.</id>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <exec executable="start" vmlauncher="false">
                                            <arg line="http://${fitnesse.host}:${fitnesse.port}/?responder=shutdown"/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile will run Integration Tests -->
        <profile>
            <id>fitnesse-integration</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                               <id>start-fitnesse-integration</id>
                                <phase>integration-test</phase>
                                <configuration>
                                    <tasks>
                                        <record name="${logFileName}" action="start"/>

                                        <!--<echo taskname="Update Default Service Categories" message="Activating Default Service Categories..." />
                                        <java classname="com.mhs.rem.fitnesse.ui.fixtures.data.ActivateDefaultServiceCategories" fork="true" failonerror="true">
                                            <classpath>
                                                <pathelement location="${project.basedir}/target/test-classes/ojdbc/ojdbc5-11.1.0.7.0.jar"/>
                                                <pathelement path="${project.basedir}/target/test-classes/"/>
                                            </classpath>
                                            <jvmarg value="${param.db.driver.type}" />
                                            <jvmarg value="${param.db.server.name}" />
                                            <jvmarg value="${param.db.port}" />
                                            <jvmarg value="${param.db.sid}" />
                                            <jvmarg value="${param.db.service.name}" />
                                            <jvmarg value="${param.db.user}" />
                                            <jvmarg value="${param.db.password}" />
                                        </java>-->

                                        <echo taskname="FitNesse" message="Starting FitNesse ${fitnesse.version}..." />
                                        <java classname="fitnesseMain.FitNesseMain" classpathref="maven.runtime.classpath" fork="true" failonerror="true">
                                            <arg line="-p ${fitnesse.port}" />
                                            <arg line="-c ${fitnesse.filter}" />
                                            <arg line="-d ." />
                                            <jvmarg value="${param.url.prefix}" />
                                            <jvmarg value="${param.app.host}" />
                                            <jvmarg value="${param.hub.endpoint}" />
                                            <jvmarg value="${param.environment}" />
                                            <jvmarg value="${param.module}" />
                                            <jvmarg value="${param.fsuploaddir}" />
                                            <jvmarg value="${param.codeuploaddir}" />
                                            <jvmarg value="${param.productuploaddir}" />
                                            <jvmarg value="${param.browser}" />
                                            <jvmarg value="${param.email}" />
                                            <jvmarg value="${param.browser.version}" />
                                            <jvmarg value="${param.platform}" />
                                            <jvmarg value="${param.sauce.user}" />
                                            <jvmarg value="${param.sauce.key}" />
                                            <jvmarg value="${param.sauce.results}" />
                                            <jvmarg value="${param.db.driver.type}" />
                                            <jvmarg value="${param.db.server.name}" />
                                            <jvmarg value="${param.db.port}" />
                                            <jvmarg value="${param.db.sid}" />
                                            <jvmarg value="${param.db.service.name}" />
                                            <jvmarg value="${param.db.user}" />
                                            <jvmarg value="${param.db.password}" />
                                            <jvmarg value="${param.pricer.host}"/>
                                            <jvmarg value="${param.app.port}"/>
                                            <jvmarg value="${param.pricer.port}"/>
                                            <jvmarg value="${param.content.type}"/>
											<jvmarg value="${param.correlationId}"/>
                                            <jvmarg value="${param.app.username}"/>
                                            <jvmarg value="${param.app.password}"/>
											<jvmarg value="${param.tenant.alias}"/>
                                            <jvmarg value="${param.pricer.username}"/>
                                            <jvmarg value="${param.pricer.password}"/>
                                            <jvmarg value="${param.int.api.username}"/>
                                            <jvmarg value="${param.int.api.password}"/>
                                            <jvmarg value="${param.rem.target.env}"/>
                                            <jvmarg value="${param.rem.ssh.user}"/>
                                            <jvmarg value="${param.rem.ssh.password}"/>
                                            <jvmarg value="${param.selenium.log}"/>
                                            <!-- additional command line arg options -->
                                            <!--<arg line="-d " />-->  <!-- to define working directory. default is {.} -->
                                            <!--<arg line="-r " />-->  <!-- page root firectory. default is {FitNesseRoot} -->
                                            <!--<arg line="-l " />-->  <!-- log directory -->
                                            <!--<arg line="-e " />-->  <!-- number of days before page version exprires -->
                                            <!--<arg line="-o " />-->  <!-- omit updates -->
                                            <!--<arg line="-a " />-->  <!-- {user:pwd | user-file-name} enable authentication -->
                                            <!--<jvmarg value="-DBROWSER=phantomjs" />-->
                                        </java>
                                        <record name="${logFileName}" action="stop"/>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.fitnesse.plugins</groupId>
                    <artifactId>maven-classpath-plugin</artifactId>
                    <version>${maven-classpath-plugin.version}</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- This profile will Generate HTML report named "FitNesseReport.html" out of the "log.txt" file generated from console log.-->
        <!--TODO: The report names and locations should be dynamic and be entered from command line-->
        <!-- <profile>
            <id>reports</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>generate-html-report</id>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <tasks>
                                        Need to move report generation in /target folder for proper cleanup
                                        <echo taskname="reports" message="Generating HTML Report..." />
                                        <java classname="com.mhs.rem.fitnesse.reports.GenerateReports" classpath="${project.basedir}/target/test-classes/" fork="true" failonerror="true">
                                            <jvmarg value="${log.filename}" />
                                        </java>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            This task is still being worked on. It reads all XMLs in the given folder and transform them into HTML.
                            <execution>
                                <id>render-XML-reports</id>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <tasks>
                                        <echo taskname="reports" message="Transforming XML Reports into HTML Reports..." />
                                        <java classname="com.mhs.rem.fitnesse.reports.GenerateReports" classpath="C:/dev/share/rem-test/fitnesse/target/test-classes/" fork="true" failonerror="true">

                                        </java>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile> -->
    </profiles>
</project>

